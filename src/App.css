/* @import "tailwindcss"; */

input:-webkit-autofill {
  background-color: transparent !important;
  box-shadow: none !important;
  -webkit-box-shadow: none !important;
}
.custom-container {
  max-width: 1200px;
  width: 100%;
  margin: 0 auto;
  padding: 0 1rem;
}

.react-tel-input .form-control {
  position: relative;
  font-size: 14px;
  letter-spacing: 0.01rem;
  margin-top: 4px !important;
  margin-bottom: 0 !important;
  padding-left: 48px;
  margin-left: 0;
  background: #ffffff;
  border: 1px solid #818181;
  border-radius: 5px;
  line-height: 25px;
  height: 39px;
  /* width: 214px; */
  width: 100%;
  outline: none;
}
.react-tel-input .country-list .country-name {
  margin-right: 6px;
  color: black;
}
.react-tel-input .flag-dropdown {
  position: absolute;
  top: 0;
  bottom: 0;
  padding: 0;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 3px 0 0 3px;
}
.react-tel-input .selected-flag:hover,
.react-tel-input .selected-flag:focus {
  background-color: transparent;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}

.hide-scrollbar {
  scrollbar-width: none;
}
input[type="radio"].custom-radio {
  background-color: transparent !important;
}
.custom-radio:checked {
  accent-color: #e66d3d !important;
}
select option:hover {
  background-color: #e66d3d !important;
  color: white !important;
}

.slick-slider {
  touch-action: pan-y;
}
/* hide-scrollbar: works across all modern browsers */
.hide-scrollbar {
  scrollbar-width: none;
  -ms-overflow-style: none;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
/* global.css or tailwind.css */
.scrollbar-hide::-webkit-scrollbar {
  display: none;
}
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

input:-webkit-autofill {
  box-shadow: 0 0 0px 1000px white inset !important;
  -webkit-text-fill-color: #1f2937 !important;
  transition: background-color 9999s ease-in-out 0s;
}
@media (max-width: 480px) {
  .custom-calendar-wrapper .rdrCalendarWrapper {
    width: 220px !important;
    font-size: 9px !important;
  }

  .custom-calendar-wrapper .rdrMonth {
    padding-left: 3px !important;
    padding-right: 22px !important;
  }

  .custom-calendar-wrapper .rdrWeekDays {
    margin-bottom: 0 !important;
    display: grid !important;
    grid-template-columns: repeat(7, 1fr) !important;
    gap: 0px !important;
  }

  .custom-calendar-wrapper .rdrWeekDay {
    font-size: 8px !important;
    padding: 2px 0 !important;
    text-align: center !important;
  }

  .custom-calendar-wrapper .rdrDays {
    display: grid !important;
    grid-template-columns: repeat(7, 1fr) !important;
    gap: 0px !important;
  }

  .custom-calendar-wrapper .rdrDay {
    width: 24px !important;
    height: 26px !important;
    margin: 0px !important;
    font-size: 0.6rem !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
  }

  .custom-calendar-wrapper .rdrDayNumber span {
    font-size: 0.6rem !important;
    line-height: 1 !important;
  }
}

@media (max-width: 480px) {
  .custom-calendar-wrapper {
    transform: scale(0.99);
    transform-origin: top left;
  }
}
.react-datepicker {
  left: 39px !important;
}

/*  toggle nav bar  */

.checkbox-wrapper-5 .check {
  --size: 40px;
  position: relative;
  background: linear-gradient(90deg, #f19af3, #f099b5);
  line-height: 0;
  perspective: 400px;
  font-size: var(--size);
}
.checkbox-wrapper-5 .check input[type="checkbox"],
.checkbox-wrapper-5 .check label,
.checkbox-wrapper-5 .check label::before,
.checkbox-wrapper-5 .check label::after,
.checkbox-wrapper-5 .check {
  appearance: none;
  display: inline-block;
  border-radius: var(--size);
  border: 0;
  transition: 0.35s ease-in-out;
  box-sizing: border-box;
  cursor: pointer;
}
.checkbox-wrapper-5 .check label {
  width: calc(2.2 * var(--size));
  height: var(--size);
  background: #d7d7d7;
  overflow: hidden;
}
.checkbox-wrapper-5 .check input[type="checkbox"] {
  position: absolute;
  z-index: 1;
  width: calc(0.8 * var(--size));
  height: calc(0.8 * var(--size));
  top: calc(0.1 * var(--size));
  left: calc(0.1 * var(--size));
  background: linear-gradient(45deg, #dedede, #ffffff);
  box-shadow: 0 6px 7px rgba(0, 0, 0, 0.3);
  outline: none;
  margin: 0;
}
.checkbox-wrapper-5 .check input[type="checkbox"]:checked {
  left: calc(1.3 * var(--size));
}
.checkbox-wrapper-5 .check input[type="checkbox"]:checked + label {
  background: transparent;
}
.checkbox-wrapper-5 .check label::before,
.checkbox-wrapper-5 .check label::after {
  content: "· ·";
  position: absolute;
  overflow: hidden;
  left: calc(0.15 * var(--size));
  top: calc(0.5 * var(--size));
  height: var(--size);
  letter-spacing: calc(-0.04 * var(--size));
  color: #9b9b9b;
  font-family: "Times New Roman", serif;
  z-index: 2;
  font-size: calc(0.6 * var(--size));
  border-radius: 0;
  transform-origin: 0 0 calc(-0.5 * var(--size));
  backface-visibility: hidden;
}
.checkbox-wrapper-5 .check label::after {
  content: "●";
  top: calc(0.65 * var(--size));
  left: calc(0.2 * var(--size));
  height: calc(0.1 * var(--size));
  width: calc(0.35 * var(--size));
  font-size: calc(0.2 * var(--size));
  transform-origin: 0 0 calc(-0.4 * var(--size));
}
.checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::before,
.checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::after {
  left: calc(1.55 * var(--size));
  top: calc(0.4 * var(--size));
  line-height: calc(0.1 * var(--size));
  transform: rotateY(360deg);
}
.checkbox-wrapper-5 .check input[type="checkbox"]:checked + label::after {
  height: calc(0.16 * var(--size));
  top: calc(0.55 * var(--size));
  left: calc(1.6 * var(--size));
  font-size: calc(0.6 * var(--size));
  line-height: 0;
}
/*  */
/* Override in-range background color */
.rdrInRange {
  background-color: transparent !important;
  color: black !important;
}

.rdrStartEdge,
.rdrEndEdge {
  background-color: transparent !important;
  color: black !important;
}
.rdrDayStartPreview,
.rdrDayInPreview,
.rdrDayEndPreview {
  border: none !important;
}

/* annimation pop up */
@keyframes fadeInScale {
  0% {
    transform: scale(0.95);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

.animate-fadeInScale {
  animation: fadeInScale 0.9s ease-out forwards;
}
